3. say_my_name module
===============================

using ``say_my_name``
----------------------

This is an example text file in reStructuredText format.  First import
``say_my_name`` from the ``3. say_my_name`` module:
    >>> say_my_name = __import__('3-say_my_name').say_my_name


Section // string
----------------------

Test case : A test with basic string
    >>> say_my_name("François", "Gosselin")
    My name is François Gosselin

Test case : A test with first name only
    >>> say_my_name("François")
    My name is François



Section // No string
----------------------

# Test case without parameters

    >>> say_my_name()
    Traceback (most recent call last):
    ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'


# Test case with none
    >>> say_my_name(None)
    Traceback (most recent call last):
    ...
    TypeError: first_name must be an string

# Test case with one parameter none
    >>> say_my_name("François", None)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be an string

# Test case with one parameter int
    >>> say_my_name(5, "Gosselin")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be an string



# Test case with second invalid paramater
    >>> say_my_name("François", b)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be an string


# Test case with list
    >>> asay_my_name([5,5])
    Traceback (most recent call last):
    ...
    TypeError: first_name must be an string
